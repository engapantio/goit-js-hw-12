{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nexport default function getImagesByQuery(query) {\n  axios.defaults.baseURL = 'https://pixabay.com';\n  return axios.get('/api/', {\n    params: {\n      key: '51453441-8ba936d16adf232cd1ca4d1fd',\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n    },\n  });\n}\n\n/*\nДля організації коду використовуй модульність та синтаксис export/import.\n\nУ файлі pixabay-api.js зберігай функції для виконання HTTP-запитів:\n\ngetImagesByQuery(query). Ця функція повинна приймати один параметр query (пошукове слово, яке є рядком), здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\n\nHTTP-запити\n\nДодай у проєкт бібліотеку Axios для написання коду, пов’язаного з HTTP-запитами.\n\n\nДля бекенду використовуй публічний API сервіс Pixabay. Зареєструйся, отримай свій унікальний ключ доступу і ознайомся з документацією.\n\nСписок параметрів рядка запиту, які тобі обов'язково необхідно вказати:\n\nkey — твій унікальний ключ доступу до API.\nq — слово для пошуку. Те, що буде вводити користувач.\nimage_type — тип зображення. Потрібні тільки фотографії, тому постав значення photo.\norientation — орієнтація фотографії. Постав значення horizontal.\nsafesearch — фільтр за віком. Постав значення true.\n\n\nУ відповіді буде об’єкт із декількома властивостями, в одному з яких (hits) буде масив об’єктів із зображеннями, що задовольнили критерії параметрів запиту.\n\nОбов’язково винеси функції для HTTP-запитів у файл pixabay-api.js у папці js. Це хороша практика та можливість відпрацювати модульний підхід до розробки.\n\nЯкщо бекенд повертає порожній масив, це означає, що нічого підходящого не було знайдено. У такому випадку відображай повідомлення з текстом:\n\nSorry, there are no images matching your search query. Please try again!\n\n*/\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function createGallery(images) {\n  const markup = images\n    .map(\n      image => `<li class=\"gallery-item\">\n      <a href=\"${image.largeImageURL}\">\n        <img class=\"gallery-image\" src=\"${image.webformatURL}\" alt=\"${image.tags}\">\n        <ul class=\"photo-details\">\n          <li>\n            <p>Likes</p>\n            <p>${image.likes}</p>\n          </li>\n          <li>\n            <p>Views</p>\n            <p>${image.views}</p>\n          </li>\n          <li>\n            <p>Comments</p>\n            <p>${image.comments}</p>\n          </li>\n          <li>\n            <p>Downloads</p>\n            <p>${image.downloads}</p>\n          </li>\n        </ul>\n      </a>\n    </li>`\n    )\n    .join('');\n\n  document.querySelector('ul.gallery').innerHTML = markup;\n\n  const galleryItemLarge = new SimpleLightbox('.gallery a', {\n    animationSpeed: 350,\n    captionsData: 'alt',\n    captionDelay: 150,\n    rtl: true,\n    widthRatio: 0.9,\n  });\n\n  galleryItemLarge.refresh();\n}\n\nexport function clearGallery() {\n  document.querySelector('ul.gallery').innerHTML = '';\n}\n\nexport function showLoader() {\n  document.querySelector('.js-loader').classList.add('loader');\n}\n\nexport function hideLoader() {\n  document.querySelector('.js-loader').classList.remove('loader');\n}\n\n// Перед пошуком за новим ключовим словом необхідно повністю очищати вміст галереї, щоб не змішувати результати запитів.\n\n/*\nУ файлі render-functions.js створи екземпляр SimpleLightbox для роботи з модальним вікном та зберігай функції для відображення елементів інтерфейсу:\n\ncreateGallery(images). Ця функція повинна приймати масив images, створювати HTML-розмітку для галереї, додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh(). Нічого не повертає.\nclearGallery(). Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. Нічого не повертає.\nshowLoader(). Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\nhideLoader(). Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. Нічого не повертає.\n\n\n\nБібліотека SimpleLightbox\n\n\n\nДодай відображення великої версії зображення з бібліотекою SimpleLightbox для повноцінної галереї.\n\n\nУ розмітці необхідно буде обгорнути кожну картку зображення в посилання, як зазначено в документації в секції Markup.\nБібліотека містить метод refresh(), який обов'язково потрібно викликати щоразу після додавання нових елементів до галереї.\n\n\nРобота модального вікна пов'язана з самою галереєю, тому використання бібліотеки SimpleLightbox і методу екземпляру refresh() буде доцільним у файлі render-functions.js.\n\n\nНа що буде звертати увагу ментор при перевірці:\n\nДомашня робота містить два посилання: на вихідні файли і живу сторінку на GitHub Pages\nПроєкт зібраний за допомогою Vite\nКонсоль в інструментах розробника не містить помилок, попереджень і консоль логів\nДо проєкту підключені бібліотеки iziToast, SimpleLightbox та css-loader\nЕлементи на сторінці стилізовані згідно з макетом (або власні стилі)\nУ файлі  pixabay-api.js є функція getImagesByQuery(query) для виконання HTTP-запитів\nУ файлі render-functions.js створено екземпляр SimpleLightbox та є функції для відображення елементів інтерфейсу: createGallery(images), clearGallery(),  showLoader(),  hideLoader()\nУ файлі main.js описана вся логіка роботи додатку\nНа сторінці присутня форма пошуку зображень за пошуковим словом\nПри сабміті форми перед відправкою запиту на бекенд з’являється індикатор завантаження з css-loader та очищаються попередні результати пошуку на сторінці\nПри сабміті форми відправляється запит на бекенд по ключовому слову для пошуку зображень з усіма параметрами, що вказані в ТЗ\nПісля отримання відповіді від бекенда зникає індикатор завантаження та на сторінці відмальовуються зображення на основі отриманих даних від бекенду, або з’являється повідомлення про те, що підходящих результатів не було знайдено\nНові зображення додаються в DOM за одну операцію\nПісля додавання нових елементів до списку зображень на екземплярі SimpleLightbox викликається метод refresh()\nПри кліку на маленьке зображення в галереї відкривається його збільшена версія у модальному вікні з використанням бібліотеки SimpleLightbox\nПід час виконання HTTP-запитів використовуються обробники then() та catch(), щоб опрацьовувати можливі помилки та запобігти “падінню” сторінки\n\n*/\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport getImagesByQuery from './js/pixabay-api';\nimport * as rendered from './js/render-functions';\n\nconst closeSVGLink = new URL('./img/x-octagon.svg', import.meta.url).href;\nconst searchForm = document.querySelector('.form');\nlet meaning = '';\n\nsearchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  meaning = searchForm.elements['search-text'].value.trim();\n  if (meaning === '') {\n    iziToast.warning({\n      backgroundColor: 'orangered',\n      message:\n        'Sorry, there is nothing provided here to look for. Please try again!',\n      messageColor: '#fafafa',\n      messageSize: '16px',\n      messageLineHeight: 1.5,\n      position: 'topLeft',\n    });\n    return;\n  }\n\n  rendered.clearGallery();\n  rendered.showLoader();\n\n  getImagesByQuery(meaning)\n    .then(response => {\n      rendered.hideLoader();\n      searchForm.elements['search-text'].value = '';\n      if (response.data.hits.length === 0) {\n        iziToast.error({\n          backgroundColor: '#ef4040',\n          class: 'error-message',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          messageColor: '#fff',\n          messageSize: '16px',\n          messageLineHeight: 1.5,\n          position: 'topRight',\n          iconUrl: closeSVGLink,\n        });\n\n        return;\n      }\n\n      rendered.createGallery(response.data.hits);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n});\n\n/*\nУ файлі main.js напиши всю логіку роботи додатка. Виклики нотифікацій iziToast, усі перевірки на довжину масиву в отриманій відповіді робимо саме в цьому файлі. Імпортуй в нього функції із файлів pixabay-api.js та render-functions.js та викликай їх у відповідний момент.\nКористувач буде вводити рядок для пошуку в текстове поле, а за сабмітом форми необхідно виконувати HTTP-запит із цим пошуковим рядком.\n\n\n\nПри натисканні на кнопку відправки форми, додайте перевірку вмісту текстового поля на наявність порожнього рядка, щоб користувач не міг відправити запит, якщо поле пошуку порожнє.\n\nДля показу повідомлень використовуй бібліотеку iziToast.\n\n\nГалерея і картки зображень\n\nЕлемент галереї (список однотипних елементів <ul class=”gallery”>) уже має бути в HTML-документі. Після виконання HTTP-запитів у нього потрібно додавати розмітку карток зображень.\n\nІндикатор завантаження\n\nДодай елемент для сповіщення користувача про процес завантаження зображень із бекенду. Завантажувач має з’являтися перед початком HTTP-запиту та зникати після його завершення.\n\n*/\n"],"names":["getImagesByQuery","query","axios","createGallery","images","markup","image","SimpleLightbox","clearGallery","showLoader","hideLoader","closeSVGLink","searchForm","meaning","e","iziToast","rendered.clearGallery","rendered.showLoader","response","rendered.hideLoader","rendered.createGallery","error"],"mappings":"owBACe,SAASA,EAAiBC,EAAO,CAC9C,OAAAC,EAAM,SAAS,QAAU,sBAClBA,EAAM,IAAI,QAAS,CACxB,OAAQ,CACN,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAClB,CACA,CAAG,CACH,CCTO,SAASE,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACZ,IACCE,GAAS;AAAA,iBACEA,EAAM,aAAa;AAAA,0CACMA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,iBAI/DA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,iBAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,iBAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,iBAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,UAKhC,EACK,KAAK,EAAE,EAEV,SAAS,cAAc,YAAY,EAAE,UAAYD,EAExB,IAAIE,EAAe,aAAc,CACxD,eAAgB,IAChB,aAAc,MACd,aAAc,IACd,IAAK,GACL,WAAY,EAChB,CAAG,EAEgB,QAAO,CAC1B,CAEO,SAASC,GAAe,CAC7B,SAAS,cAAc,YAAY,EAAE,UAAY,EACnD,CAEO,SAASC,GAAa,CAC3B,SAAS,cAAc,YAAY,EAAE,UAAU,IAAI,QAAQ,CAC7D,CAEO,SAASC,GAAa,CAC3B,SAAS,cAAc,YAAY,EAAE,UAAU,OAAO,QAAQ,CAChE,CClDA,MAAMC,EAAe,IAAA,IAAA,ssFAAA,YAAA,GAAA,EAAgD,KAC/DC,EAAa,SAAS,cAAc,OAAO,EACjD,IAAIC,EAAU,GAEdD,EAAW,iBAAiB,SAAUE,GAAK,CAGzC,GAFAA,EAAE,eAAc,EAChBD,EAAUD,EAAW,SAAS,aAAa,EAAE,MAAM,KAAI,EACnDC,IAAY,GAAI,CAClBE,EAAS,QAAQ,CACf,gBAAiB,YACjB,QACE,uEACF,aAAc,UACd,YAAa,OACb,kBAAmB,IACnB,SAAU,SAChB,CAAK,EACD,MACF,CAEAC,EAAqB,EACrBC,EAAmB,EAEnBjB,EAAiBa,CAAO,EACrB,KAAKK,GAAY,CAGhB,GAFAC,EAAmB,EACnBP,EAAW,SAAS,aAAa,EAAE,MAAQ,GACvCM,EAAS,KAAK,KAAK,SAAW,EAAG,CACnCH,EAAS,MAAM,CACb,gBAAiB,UACjB,MAAO,gBACP,QACE,2EACF,aAAc,OACd,YAAa,OACb,kBAAmB,IACnB,SAAU,WACV,QAASJ,CACnB,CAAS,EAED,MACF,CAEAS,EAAuBF,EAAS,KAAK,IAAI,CAC3C,CAAC,EACA,MAAMG,GAAS,CACd,QAAQ,MAAMA,CAAK,CACrB,CAAC,CACL,CAAC"}